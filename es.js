!function(){"use strict";const e=e=>"querySelectorAll"in e,{filter:t}=[];var r=r=>{const l=new WeakMap,o=l=>{const{query:o}=r;if(o.length)for(let r=0,{length:s}=l;r<s;r++)n(t.call(l[r].addedNodes,e),!0,o),n(t.call(l[r].removedNodes,e),!1,o)},n=(e,t,o,a=new Set)=>{for(let c,u,i=0,{length:h}=e;i<h;i++)if(!a.has(u=e[i])){if(a.add(u),t)for(let e,n=s(u),a=0,{length:i}=o;a<i;a++)n.call(u,e=o[a])&&(l.has(u)||l.set(u,new Set),c=l.get(u),c.has(e)||(c.add(e),r.handle(u,t,e)));else l.has(u)&&(c=l.get(u),l.delete(u),c.forEach(e=>{r.handle(u,t,e)}));n(u.querySelectorAll(o),t,o,a)}},s=e=>e.matches||e.webkitMatchesSelector||e.msMatchesSelector,a=(e,t=!0)=>{n(e,t,r.query)},c=new MutationObserver(o),u=r.root||document,{query:i}=r;return c.observe(u,{childList:!0,subtree:!0}),i.length&&a(u.querySelectorAll(i)),{drop:e=>{for(let t=0,{length:r}=e;t<r;t++)l.delete(e[t])},flush:()=>{o(c.takeRecords())},observer:c,parse:a}};const{customElements:l,document:o,Element:n,MutationObserver:s,Object:a,Promise:c,Map:u,Set:i,WeakMap:h}=self,{attachShadow:d}=n.prototype,{createElement:f}=o,{define:p,get:y}=l,{defineProperty:g,getOwnPropertyNames:w,setPrototypeOf:b}=a,m=new h,v=new i,S=new u,q=new u,A=new u,E=new u,M=[],O=[],k=e=>E.get(e)||y.call(l,e),N=(e,t,r)=>{const l=A.get(r);if(t&&!l.isPrototypeOf(e)){L=b(e,l);try{new l.constructor}finally{L=null}}const o=(t?"":"dis")+"connectedCallback";o in l&&e[o]()},{parse:P}=r({query:O,handle:N}),{parse:$}=r({query:M,handle(e,t){m.has(e)&&(t?v.add(e):v.delete(e),T.call(O,e))}}),C=e=>{if(!q.has(e)){let t,r=new c(e=>{t=e});q.set(e,{$:r,_:t})}return q.get(e).$},V=((e,t)=>{const r=e=>{for(let t=0,{length:r}=e;t<r;t++)l(e[t])},l=({target:e,attributeName:t,oldValue:r})=>{e.attributeChangedCallback(t,r,e.getAttribute(t))};return(o,n)=>{const{observedAttributes:s}=o.constructor;return s&&e(n).then(()=>{new t(r).observe(o,{attributes:!0,attributeOldValue:!0,attributeFilter:s});for(let e=0,{length:t}=s;e<t;e++)o.hasAttribute(s[e])&&l({target:o,attributeName:s[e],oldValue:null})}),o}})(C,s);let L=null;function T(e){const{parse:t,root:r}=m.get(e);t(r.querySelectorAll(this),e.isConnected)}w(self).filter(e=>/^HTML(?!Element)/.test(e)).forEach(e=>{function t(){const{constructor:e}=this;if(!S.has(e))throw new TypeError("Illegal constructor");const{is:t,tag:r}=S.get(e);if(L)return V(L,t);const l=f.call(o,r);return l.setAttribute("is",t),V(b(l,e.prototype),t)}b(t,self[e]),(t.prototype=self[e].prototype).constructor=t,g(self,e,{value:t})}),g(n.prototype,"attachShadow",{value(){const e=d.apply(this,arguments),{parse:t}=r({query:O,root:e,handle:N});return m.set(this,{root:e,parse:t}),e}}),g(l,"define",{value(e,t,r){let n;const s=r&&r.extends;if(s){if(k(e))throw new Error(`the name "${e}" has already been used with this registry`);n=`${s}[is="${e}"]`,S.set(t,{is:e,tag:s}),A.set(n,t.prototype),E.set(e,t),O.push(n)}else p.apply(l,arguments),M.push(n=e);C(e).then(()=>{s?(P(o.querySelectorAll(n)),v.forEach(T,[n])):$(o.querySelectorAll(n))}),q.get(e)._()}}),g(l,"get",{value:k}),g(l,"whenDefined",{value:C}),g(o,"createElement",{value(e,t){const r=t&&t.is;return r?new(E.get(r)):f.call(o,e)}})}();
